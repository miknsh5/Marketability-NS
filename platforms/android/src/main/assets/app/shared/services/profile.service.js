"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var ProfileService = (function () {
    function ProfileService(http) {
        this.http = http;
        this.profileUrl = "https://api.linkedin.com/v1/people/~:(id,first-name,last-name,location,headline,picture-url,industry,summary,specialties,positions:(id,title,summary,start-date,end-date,is-current,company:(id,name,type,size,industry,ticker)),educations:(id,school-name,field-of-study,start-date,end-date,degree,activities,notes),associations,interests,num-recommenders,date-of-birth,publications:(id,title,publisher:(name),authors:(id,name),date,url,summary),patents:(id,title,summary,number,status:(id,name),office:(name),inventors:(id,name),date,url),languages:(id,language:(name),proficiency:(level,name)),skills:(id,skill:(name)),certifications:(id,name,authority:(name),number,start-date,end-date),courses:(id,name,number),recommendations-received:(id,recommendation-type,recommendation-text,recommender),honors-awards,three-current-positions,three-past-positions,volunteer)?oauth2_access_token=";
    }
    ProfileService.prototype.getProfile = function (token) {
        //  alert("token rec by service is "+token);
        var headers = new http_1.Headers();
        headers.append("Content-Type", "application/json");
        return this.http.get(this.profileUrl + token + "&format=json").map(function (result) { return result.json(); });
    };
    return ProfileService;
}());
ProfileService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], ProfileService);
exports.ProfileService = ProfileService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicHJvZmlsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLHNDQUF3RDtBQUV4RCxJQUFhLGNBQWM7SUFFM0Isd0JBQW9CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBRHpCLGVBQVUsR0FBUyxxM0JBQXEzQixDQUFDO0lBQzcyQixDQUFDO0lBQ2xDLG1DQUFVLEdBQVYsVUFBVyxLQUFhO1FBRXRCLDRDQUE0QztRQUM5QyxJQUFJLE9BQU8sR0FBRyxJQUFJLGNBQU8sRUFBRSxDQUFDO1FBQ3hCLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUMsS0FBSyxHQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLE1BQU0sSUFBRSxPQUFBLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBYixDQUFhLENBQUMsQ0FBQztJQUV0RixDQUFDO0lBQ0QscUJBQUM7QUFBRCxDQUFDLEFBWEQsSUFXQztBQVhZLGNBQWM7SUFEMUIsaUJBQVUsRUFBRTtxQ0FHYSxXQUFJO0dBRmpCLGNBQWMsQ0FXMUI7QUFYWSx3Q0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cCwgSGVhZGVycywgUmVzcG9uc2UgfSBmcm9tIFwiQGFuZ3VsYXIvaHR0cFwiO1xyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBQcm9maWxlU2VydmljZSB7XHJcbiAgICAgcHJvZmlsZVVybDpzdHJpbmcgPVwiaHR0cHM6Ly9hcGkubGlua2VkaW4uY29tL3YxL3Blb3BsZS9+OihpZCxmaXJzdC1uYW1lLGxhc3QtbmFtZSxsb2NhdGlvbixoZWFkbGluZSxwaWN0dXJlLXVybCxpbmR1c3RyeSxzdW1tYXJ5LHNwZWNpYWx0aWVzLHBvc2l0aW9uczooaWQsdGl0bGUsc3VtbWFyeSxzdGFydC1kYXRlLGVuZC1kYXRlLGlzLWN1cnJlbnQsY29tcGFueTooaWQsbmFtZSx0eXBlLHNpemUsaW5kdXN0cnksdGlja2VyKSksZWR1Y2F0aW9uczooaWQsc2Nob29sLW5hbWUsZmllbGQtb2Ytc3R1ZHksc3RhcnQtZGF0ZSxlbmQtZGF0ZSxkZWdyZWUsYWN0aXZpdGllcyxub3RlcyksYXNzb2NpYXRpb25zLGludGVyZXN0cyxudW0tcmVjb21tZW5kZXJzLGRhdGUtb2YtYmlydGgscHVibGljYXRpb25zOihpZCx0aXRsZSxwdWJsaXNoZXI6KG5hbWUpLGF1dGhvcnM6KGlkLG5hbWUpLGRhdGUsdXJsLHN1bW1hcnkpLHBhdGVudHM6KGlkLHRpdGxlLHN1bW1hcnksbnVtYmVyLHN0YXR1czooaWQsbmFtZSksb2ZmaWNlOihuYW1lKSxpbnZlbnRvcnM6KGlkLG5hbWUpLGRhdGUsdXJsKSxsYW5ndWFnZXM6KGlkLGxhbmd1YWdlOihuYW1lKSxwcm9maWNpZW5jeToobGV2ZWwsbmFtZSkpLHNraWxsczooaWQsc2tpbGw6KG5hbWUpKSxjZXJ0aWZpY2F0aW9uczooaWQsbmFtZSxhdXRob3JpdHk6KG5hbWUpLG51bWJlcixzdGFydC1kYXRlLGVuZC1kYXRlKSxjb3Vyc2VzOihpZCxuYW1lLG51bWJlcikscmVjb21tZW5kYXRpb25zLXJlY2VpdmVkOihpZCxyZWNvbW1lbmRhdGlvbi10eXBlLHJlY29tbWVuZGF0aW9uLXRleHQscmVjb21tZW5kZXIpLGhvbm9ycy1hd2FyZHMsdGhyZWUtY3VycmVudC1wb3NpdGlvbnMsdGhyZWUtcGFzdC1wb3NpdGlvbnMsdm9sdW50ZWVyKT9vYXV0aDJfYWNjZXNzX3Rva2VuPVwiO1xyXG5jb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHApIHt9XHJcbmdldFByb2ZpbGUodG9rZW46IHN0cmluZyApXHJcbntcclxuICAvLyAgYWxlcnQoXCJ0b2tlbiByZWMgYnkgc2VydmljZSBpcyBcIit0b2tlbik7XHJcbmxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuICAgIGhlYWRlcnMuYXBwZW5kKFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiKTtcclxucmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5wcm9maWxlVXJsK3Rva2VuK1wiJmZvcm1hdD1qc29uXCIpLm1hcChyZXN1bHQ9PnJlc3VsdC5qc29uKCkpO1xyXG5cclxufVxyXG59XHJcbiJdfQ==
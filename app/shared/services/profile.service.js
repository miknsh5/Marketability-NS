"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var ProfileService = (function () {
    function ProfileService(http) {
        this.http = http;
        this.profileUrl = "https://api.linkedin.com/v1/people/~:(id,first-name,last-name,location,headline,picture-url,industry,summary,specialties,positions:(id,title,summary,start-date,end-date,is-current,company:(id,name,type,size,industry,ticker)),educations:(id,school-name,field-of-study,start-date,end-date,degree,activities,notes),associations,interests,num-recommenders,date-of-birth,publications:(id,title,publisher:(name),authors:(id,name),date,url,summary),patents:(id,title,summary,number,status:(id,name),office:(name),inventors:(id,name),date,url),languages:(id,language:(name),proficiency:(level,name)),skills:(id,skill:(name)),certifications:(id,name,authority:(name),number,start-date,end-date),courses:(id,name,number),recommendations-received:(id,recommendation-type,recommendation-text,recommender),honors-awards,three-current-positions,three-past-positions,volunteer)?oauth2_access_token=";
    }
    ProfileService.prototype.getProfile = function (token) {
        //  alert("token rec by service is "+token);
        var headers = new http_1.Headers();
        headers.append("Content-Type", "application/json");
        return this.http.get(this.profileUrl + token + "&format=json").map(function (result) { return result.json(); });
    };
    return ProfileService;
}());
ProfileService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], ProfileService);
exports.ProfileService = ProfileService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicHJvZmlsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLHNDQUF3RDtBQUV4RCxJQUFhLGNBQWM7SUFFM0Isd0JBQW9CLElBQVU7UUFBVixTQUFJLEdBQUosSUFBSSxDQUFNO1FBRHpCLGVBQVUsR0FBUyxxM0JBQXEzQixDQUFDO0lBQzcyQixDQUFDO0lBQ2xDLG1DQUFVLEdBQVYsVUFBVyxLQUFhO1FBRXRCLDRDQUE0QztRQUM5QyxJQUFJLE9BQU8sR0FBRyxJQUFJLGNBQU8sRUFBRSxDQUFDO1FBQ3hCLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUMsS0FBSyxHQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLE1BQU0sSUFBRSxPQUFBLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBYixDQUFhLENBQUMsQ0FBQztJQUV0RixDQUFDO0lBQ0QscUJBQUM7QUFBRCxDQUFDLEFBWEQsSUFXQztBQVhZLGNBQWM7SUFEMUIsaUJBQVUsRUFBRTtxQ0FHYSxXQUFJO0dBRmpCLGNBQWMsQ0FXMUI7QUFYWSx3Q0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEh0dHAsIEhlYWRlcnMsIFJlc3BvbnNlIH0gZnJvbSBcIkBhbmd1bGFyL2h0dHBcIjtcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQcm9maWxlU2VydmljZSB7XG4gICAgIHByb2ZpbGVVcmw6c3RyaW5nID1cImh0dHBzOi8vYXBpLmxpbmtlZGluLmNvbS92MS9wZW9wbGUvfjooaWQsZmlyc3QtbmFtZSxsYXN0LW5hbWUsbG9jYXRpb24saGVhZGxpbmUscGljdHVyZS11cmwsaW5kdXN0cnksc3VtbWFyeSxzcGVjaWFsdGllcyxwb3NpdGlvbnM6KGlkLHRpdGxlLHN1bW1hcnksc3RhcnQtZGF0ZSxlbmQtZGF0ZSxpcy1jdXJyZW50LGNvbXBhbnk6KGlkLG5hbWUsdHlwZSxzaXplLGluZHVzdHJ5LHRpY2tlcikpLGVkdWNhdGlvbnM6KGlkLHNjaG9vbC1uYW1lLGZpZWxkLW9mLXN0dWR5LHN0YXJ0LWRhdGUsZW5kLWRhdGUsZGVncmVlLGFjdGl2aXRpZXMsbm90ZXMpLGFzc29jaWF0aW9ucyxpbnRlcmVzdHMsbnVtLXJlY29tbWVuZGVycyxkYXRlLW9mLWJpcnRoLHB1YmxpY2F0aW9uczooaWQsdGl0bGUscHVibGlzaGVyOihuYW1lKSxhdXRob3JzOihpZCxuYW1lKSxkYXRlLHVybCxzdW1tYXJ5KSxwYXRlbnRzOihpZCx0aXRsZSxzdW1tYXJ5LG51bWJlcixzdGF0dXM6KGlkLG5hbWUpLG9mZmljZToobmFtZSksaW52ZW50b3JzOihpZCxuYW1lKSxkYXRlLHVybCksbGFuZ3VhZ2VzOihpZCxsYW5ndWFnZToobmFtZSkscHJvZmljaWVuY3k6KGxldmVsLG5hbWUpKSxza2lsbHM6KGlkLHNraWxsOihuYW1lKSksY2VydGlmaWNhdGlvbnM6KGlkLG5hbWUsYXV0aG9yaXR5OihuYW1lKSxudW1iZXIsc3RhcnQtZGF0ZSxlbmQtZGF0ZSksY291cnNlczooaWQsbmFtZSxudW1iZXIpLHJlY29tbWVuZGF0aW9ucy1yZWNlaXZlZDooaWQscmVjb21tZW5kYXRpb24tdHlwZSxyZWNvbW1lbmRhdGlvbi10ZXh0LHJlY29tbWVuZGVyKSxob25vcnMtYXdhcmRzLHRocmVlLWN1cnJlbnQtcG9zaXRpb25zLHRocmVlLXBhc3QtcG9zaXRpb25zLHZvbHVudGVlcik/b2F1dGgyX2FjY2Vzc190b2tlbj1cIjtcbmNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cCkge31cbmdldFByb2ZpbGUodG9rZW46IHN0cmluZyApXG57XG4gIC8vICBhbGVydChcInRva2VuIHJlYyBieSBzZXJ2aWNlIGlzIFwiK3Rva2VuKTtcbmxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG5yZXR1cm4gdGhpcy5odHRwLmdldCh0aGlzLnByb2ZpbGVVcmwrdG9rZW4rXCImZm9ybWF0PWpzb25cIikubWFwKHJlc3VsdD0+cmVzdWx0Lmpzb24oKSk7XG5cbn1cbn1cbiJdfQ==